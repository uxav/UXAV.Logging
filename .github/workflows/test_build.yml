# This is a basic workflow to help you get started with Actions

name: Test Build

on:
  pull_request:

env:
  # This gets updated automatically
  VERSION: version_string
  VERSION_TITLE: version_title
  PRERELEASE: false

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      
      - name: Get Version Number
        shell: powershell
        run: |
          $version = ./.github/scripts/GetVersionFromAssemblyInfo.ps1 -Path UXAV.Logging/Properties/AssemblyInfo.cs
          Write-Output "Version is: $version"
          $versionTitle = ./.github/scripts/CreateVersionTitle.ps1 -Version $version
          Write-Output "Version title is: $version"
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "VERSION_TITLE=$versionTitle" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Create pre-release tag
        if: github.base_ref != 'master'
        shell: powershell
        run: |
          $version = ./.github/scripts/CreateAvailablePreReleaseVersion.ps1 -Version ${{ env.VERSION }} -PreReleaseName beta
          Write-Output "Version is: $version"
          $versionTitle = ./.github/scripts/CreateVersionTitle.ps1 -Version $version
          Write-Output "Version title is: $versionTitle"
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "VERSION_TITLE=$versionTitle" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "PRERELEASE=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Update AssemblyInfo.cs
        shell: powershell
        run: ./.github/scripts/UpdateAssemblyVersion.ps1 -Path UXAV.Logging/Properties/AssemblyInfo.cs -Version ${{ env.VERSION }}
        
      - name: Setup MsBuild
        uses: microsoft/setup-msbuild@v1
        
      - name: Setup NuGet.exe
        uses: NuGet/setup-nuget@v1.0.5

      - name: Nuget Add Source
        run: nuget sources Add -Name "uxav" -Source https://nuget.pkg.github.com/uxav/index.json -username uxav -password ${{ secrets.GITHUB_TOKEN }} -StorePasswordInClearText

      - name: Restore Nuget Packages
        run: nuget restore UXAV.Logging.sln

      - name: Build
        run: msbuild UXAV.Logging.sln /p:Configuration=Release

      - name: Pack Nuget
        run: nuget pack UXAV.Logging/UXAV.Logging.csproj
          
